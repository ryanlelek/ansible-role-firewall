
*filter

##############
### COMMON ###
##############

# Allow Loopback
-A INPUT  -i lo -j ACCEPT
-A OUTPUT -o lo -j ACCEPT

# Allow Ping
-A INPUT  -p icmp -m icmp --icmp-type 8 -j ACCEPT
-A OUTPUT -p icmp -m icmp --icmp-type 0 -j ACCEPT

# DNS - Outbound
-A OUTPUT -p udp -m udp --dport 53 -j ACCEPT
-A INPUT  -p udp -m udp --sport 53 -j ACCEPT
# Accept Answers
-A OUTPUT -p udp -m udp --sport 53 -j ACCEPT
-A INPUT  -p udp -m udp --dport 53 -j ACCEPT

# NTP - Outbound
-A OUTPUT -p udp -m udp --dport 123 -j ACCEPT
-A INPUT  -p udp -m udp --sport 123 -j ACCEPT

###############
### DYNAMIC ###
###############

# TCP INBOUND
# Only SSH needs "NEW" for outbound part
# RabbitMQ might too
{% if tcp_in %}{% for port in tcp_in %}
-A INPUT  -p tcp -m tcp --dport {{ port }} -m state --state NEW,ESTABLISHED -j ACCEPT
-A OUTPUT -p tcp -m tcp --sport {{ port }} -m state --state NEW,ESTABLISHED -j ACCEPT
{% endfor %}{% endif %}

# TCP OUTBOUND
# Could add -m tcp here as well
{% if tcp_out %}{% for port in tcp_out %}
-A OUTPUT -p tcp        --dport {{ port }} -m state --state NEW,ESTABLISHED -j ACCEPT
-A INPUT  -p tcp        --sport {{ port }} -m state --state     ESTABLISHED -j ACCEPT
{% endfor %}{% endif %}

# UDP INBOUND
{% if udp_in %}{% for port in udp_in %}
-A INPUT  -p udp --dport {{ port }} -j ACCEPT
-A OUTPUT -p udp --sport {{ port }} -j ACCEPT
{% endfor %}{% endif %}

# UDP OUTBOUND
{% if udp_out %}{% for port in udp_out %}
-A OUTPUT -p udp --dport {{ port }} -j ACCEPT
-A INPUT  -p udp --sport {{ port }} -j ACCEPT
{% endfor %}{% endif %}

# RESTRICTED
# Can also add same rule with -j DROP

{% for item in restricted %}
{% if item.protocol == "udp" %}
-A INPUT  -p udp --dport {{ item.port }} -m iprange --src-range {{ item.ip }} -j ACCEPT
-A OUTPUT -p udp --sport {{ item.port }} -m iprange --src-range {{ item.ip }} -j ACCEPT
{% else %}
-A INPUT  -p tcp --dport {{ item.port }} -m iprange --src-range {{ item.ip }} -m state --state NEW,ESTABLISHED -j ACCEPT
-A OUTPUT -p tcp --sport {{ item.port }} -m iprange --src-range {{ item.ip }} -m state --state NEW,ESTABLISHED -j ACCEPT
{% endif %}
{% endfor %}

###############
### DROPPED ###
###############

# Log It and Drop It
-N LOGGING
-A INPUT   -j LOGGING
-A FORWARD -j LOGGING
-A OUTPUT  -j LOGGING
-A LOGGING -m limit --limit 2/min -j LOG --log-prefix "IPTables-Dropped: " --log-level 4
-A LOGGING -j DROP

# Drop Everything Else
# Don't Log
#-A INPUT -j DROP
#-A FORWARD -j DROP
#-A OUTPUT -j DROP

COMMIT
